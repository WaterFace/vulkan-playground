{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"staging",
				"stagingBufferMemory\t  VkDeviceMemory"
			],
			[
				"vertex",
				"vertexBuffer\t  VkBuffer"
			],
			[
				"copy",
				"copyRegion\t  VkBufferCopy"
			],
			[
				"vkbegincommandbuffer",
				"vkBeginCommandBuffer(VkCommandBuffer commandBuffer, const VkCommandBufferBeginInfo *pBeginInfo)\t  VkResult"
			],
			[
				"vk_commandbuffer_usage",
				"VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT\t  VkCommandBufferUsageFlagBits"
			],
			[
				"commandbuff",
				"commandBufferCount\t  uint32_t"
			],
			[
				"vk_buffer_usage_transfer",
				"VK_BUFFER_USAGE_TRANSFER_DST_BIT\t  VkBufferUsageFlagBits"
			],
			[
				"vertexbuf",
				"vertexBufferMemory\t  VkDeviceMemory"
			],
			[
				"ver",
				"vertexBufferMemory\t  VkDeviceMemory"
			],
			[
				"memoryty",
				"memoryTypeBits\t  uint32_t"
			],
			[
				"vkMemoryAllo",
				"VkMemoryAllocateInfo\t  Interface"
			],
			[
				"proper",
				"propertyFlags\t  VkMemoryPropertyFlags"
			],
			[
				"memoryt",
				"memoryTypeCount\t  uint32_t"
			],
			[
				"vkGetPhysicaldevicememoryproperties",
				"vkGetPhysicalDeviceMemoryProperties(VkPhysicalDevice physicalDevice, VkPhysicalDeviceMemoryProperties *pMemoryProperties)\t  void"
			],
			[
				"vk_sharing",
				"VK_SHARING_MODE_EXCLUSIVE\t  VkSharingMode"
			],
			[
				"VkBufferCreate",
				"VkBufferCreateInfo\t  Interface"
			],
			[
				"VK_VERTEX_IN",
				"VK_VERTEX_INPUT_RATE_VERTEX\t  VkVertexInputRate"
			],
			[
				"inpos",
				"inPosition"
			],
			[
				"frame",
				"frameBufferResized\t  bool"
			],
			[
				"cleanup",
				"cleanupSwapChain()\t  void"
			],
			[
				"vkWaitForFence",
				"vkWaitForFences(VkDevice device, uint32_t fenceCount, const VkFence *pFences, VkBool32 waitAll, uint64_t timeout)\t  VkResult"
			],
			[
				"VK_debug_utils",
				"VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT\t  VkDebugUtilsMessageSeverityFlagBitsEXT"
			],
			[
				"infligh",
				"inFlightFences\t  std::vector<VkFence>"
			],
			[
				"render",
				"renderFinishedSemaphores\t  std::vector<VkSemaphore>"
			],
			[
				"wait",
				"waitSemaphores\t  VkSemaphore [1]"
			],
			[
				"depen",
				"dependencyCount\t  uint32_t"
			],
			[
				"vkQueuesubmit",
				"vkQueueSubmit(VkQueue queue, uint32_t submitCount, const VkSubmitInfo *pSubmits, VkFence fence)\t  VkResult"
			],
			[
				"signal",
				"signalSemaphoreCount\t  uint32_t"
			],
			[
				"image",
				"imageIndex\t  uint32_t"
			],
			[
				"command",
				"commandBufferCount\t  uint32_t"
			],
			[
				"waitSe",
				"waitSemaphoreCount\t  uint32_t"
			],
			[
				"swapchain",
				"swapChain\t  VkSwapchainKHR"
			],
			[
				"VkSem",
				"VkSemaphoreCreateInfo\t  Struct"
			],
			[
				"vk_pipeline",
				"VK_PIPELINE_BIND_POINT_GRAPHICS\t  VkPipelineBindPoint"
			],
			[
				"clear",
				"clearColor\t  VkClearColorValue"
			],
			[
				"renderpass",
				"renderPassInfo\t  VkRenderPassBeginInfo"
			],
			[
				"VkRenderpass",
				"VkRenderPassBeginInfo\t  Interface"
			],
			[
				"vk_structure_type_command",
				"VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO\t  VkStructureType"
			],
			[
				"begin",
				"beginInfo\t  VkCommandBufferBeginInfo"
			],
			[
				"vkallocatecomm",
				"vkAllocateCommandBuffers(VkDevice device, const VkCommandBufferAllocateInfo *pAllocateInfo, VkCommandBuffer *pCommandBuffers)\t  VkResult"
			],
			[
				"VkDestroyCommand",
				"vkDestroyCommandPool(VkDevice device, VkCommandPool commandPool, const VkAllocationCallbacks *pAllocator)\t  void"
			],
			[
				"VkCreateCommand",
				"vkCreateCommandPool(VkDevice device, const VkCommandPoolCreateInfo *pCreateInfo, const VkAllocationCallbacks *pAllocator, VkCommandPool *pCommandPool)\t  VkResult"
			],
			[
				"comm",
				"commandPoolInfo\t  VkCommandPoolCreateInfo"
			],
			[
				"vkcommandpoolcrea",
				"VkCommandPoolCreateInfo\t  Interface"
			],
			[
				"swap",
				"swapChainFramebuffers\t  std::vector<VkFramebuffer>"
			],
			[
				"framebuffers",
				"swapChainFramebuffers\t  std::vector<VkFramebuffer>"
			],
			[
				"Vkcreateframebuff",
				"vkCreateFramebuffer(VkDevice device, const VkFramebufferCreateInfo *pCreateInfo, const VkAllocationCallbacks *pAllocator, VkFramebuffer *pFramebuffer)\t  VkResult"
			],
			[
				"VkFrame",
				"VkFramebufferCreateInfo\t  Interface"
			],
			[
				"swapc",
				"swapChainImageViews\t  std::vector<VkImageView>"
			],
			[
				"vkImage",
				"VkImageView\t  Interface"
			],
			[
				"basepipe",
				"basePipelineIndex\t  int32_t"
			],
			[
				"pipelineL",
				"pipelineLayout\t  VkPipelineLayout"
			],
			[
				"pipeline",
				"pipelineInfo\t  VkGraphicsPipelineCreateInfo"
			],
			[
				"pViewpo",
				"pViewportState\t  const VkPipelineViewportStateCreateInfo *"
			],
			[
				"redn",
				"renderPass"
			],
			[
				"redner",
				"renderPassInfo"
			],
			[
				"sub",
				"subpassCount\t  uint32_t"
			],
			[
				"color",
				"colorAttachment\t  VkAttachmentDescription"
			],
			[
				"attach",
				"attachmentCount\t  uint32_t"
			],
			[
				"VkRenderPassCreate",
				"VkRenderPassCreateInfo\t  Interface"
			],
			[
				"VK_PIPELINE_BIND_POINT",
				"VK_PIPELINE_BIND_POINT_GRAPHICS\t  VkPipelineBindPoint"
			],
			[
				"colorAttachment",
				"colorAttachmentRef\t  VkAttachmentReference"
			],
			[
				"vk_imagelayout",
				"VK_IMAGE_LAYOUT_UNDEFINED\t  VkImageLayout"
			],
			[
				"vk_atta",
				"VK_ATTACHMENT_STORE_OP_STORE\t  VkAttachmentStoreOp"
			],
			[
				"swapchainImage",
				"swapChainImageFormat\t  VkFormat"
			],
			[
				"vkDestroyPipelineLay",
				"vkDestroyPipelineLayout(VkDevice device, VkPipelineLayout pipelineLayout, const VkAllocationCallbacks *pAllocator)\t  void"
			],
			[
				"pipe",
				"pipelineLayout\t  VkPipelineLayout"
			],
			[
				"pipelinelayout",
				"pipelineLayoutInfo\t  VkPipelineLayoutCreateInfo"
			],
			[
				"vkCreatePipelineLayout",
				"vkCreatePipelineLayout(VkDevice device, const VkPipelineLayoutCreateInfo *pCreateInfo, const VkAllocationCallbacks *pAllocator, VkPipelineLayout *pPipelineLayout)\t  VkResult"
			],
			[
				"pipelineLayout",
				"pipelineLayoutInfo\t  VkPipelineLayoutCreateInfo"
			],
			[
				"nullt",
				"nullptr\t  std::nullptr_t"
			],
			[
				"piep",
				"pipelineLayoutInfo"
			],
			[
				"dynamic",
				"dynamicStates\t  VkDynamicState [2]"
			],
			[
				"dyna",
				"dynamicStateCount\t  uint32_t"
			],
			[
				"vkpipelinedyna",
				"VkPipelineDynamicStateCreateInfo\t  Struct"
			],
			[
				"vk_logic",
				"VK_LOGIC_OP_COPY\t  VkLogicOp"
			],
			[
				"logi",
				"logicOp\t  VkLogicOp"
			],
			[
				"vkpipelinecolorblendstatecreate",
				"VkPipelineColorBlendStateCreateInfo\t  Interface"
			],
			[
				"VK_BLEND_FACTOR_ONE",
				"VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA\t  VkBlendFactor"
			],
			[
				"VK_colo",
				"VK_COLOR_COMPONENT_R_BIT\t  VkColorComponentFlagBits"
			],
			[
				"vk_sample",
				"VK_SAMPLE_COUNT_1_BIT\t  VkSampleCountFlagBits"
			],
			[
				"rasteriz",
				"rasterizationSamples\t  VkSampleCountFlagBits"
			],
			[
				"vkpipelinemultisample",
				"VkPipelineMultisampleStateCreateInfo\t  Struct"
			],
			[
				"depthbias",
				"depthBiasSlopeFactor\t  float"
			],
			[
				"depth",
				"depthBiasConstantFactor\t  float"
			],
			[
				"VK_cullmode",
				"VK_CULL_MODE_BACK_BIT\t  VkCullModeFlagBits"
			],
			[
				"raster",
				"rasterizerDiscardEnable\t  VkBool32"
			],
			[
				"dep",
				"depthClampEnable\t  VkBool32"
			],
			[
				"VkPipelineRasteri",
				"VkPipelineRasterizationStateCreateInfo\t  Struct"
			],
			[
				"viewpor",
				"viewportState\t  VkPipelineViewportStateCreateInfo"
			],
			[
				"viewport",
				"viewport\t  VkViewport"
			],
			[
				"view",
				"viewportState\t  VkPipelineViewportStateCreateInfo"
			],
			[
				"Vkpipelineviewportstatecreate",
				"VkPipelineViewportStateCreateInfo\t  Interface"
			],
			[
				"min",
				"minDepth\t  float"
			],
			[
				"VK_primitive_tpo",
				"VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST\t  VkPrimitiveTopology"
			],
			[
				"VkPipelineInput",
				"VkPipelineInputAssemblyStateCreateInfo\t  Interface"
			],
			[
				"pVertex",
				"pVertexBindingDescriptions\t  const VkVertexInputBindingDescription *"
			],
			[
				"VkPipelineVerte",
				"VkPipelineVertexInputStateCreateInfo\t  Interface"
			],
			[
				"frag",
				"fragShaderStageInfo\t  VkPipelineShaderStageCreateInfo"
			],
			[
				"vertsha",
				"vertShaderStageInfo\t  VkPipelineShaderStageCreateInfo"
			],
			[
				"vertSha",
				"vertShaderStageInfo\t  VkPipelineShaderStageCreateInfo"
			],
			[
				"vkPipelineSha",
				"VkPipelineShaderStageCreateInfo\t  Interface"
			],
			[
				"vkCreateShaderM",
				"vkCreateShaderModule(VkDevice device, const VkShaderModuleCreateInfo *pCreateInfo, const VkAllocationCallbacks *pAllocator, VkShaderModule *pShaderModule)\t  VkResult"
			],
			[
				"is",
				"is_open() const\t  bool"
			],
			[
				"PROJ",
				"PROJECT_SOURCE_DIR"
			],
			[
				"add_custom",
				"add_custom_target"
			],
			[
				"add",
				"add_custom_command"
			],
			[
				"VkDeviceQueue",
				"VkDeviceQueueCreateInfo\t  Struct"
			],
			[
				"glfwEx",
				"glfwExtensionCount"
			],
			[
				"vkDestroy",
				"vkDestroyInstance(VkInstance instance, const VkAllocationCallbacks *pAllocator)\t  void"
			],
			[
				"PROJECT",
				"PROJECT_NAME"
			],
			[
				"PROJEC",
				"PROJECT_NAME"
			],
			[
				"PRojec",
				"PROJECT_LABEL"
			],
			[
				"PROJE",
				"PROJECT_BINARY_DIR"
			],
			[
				"Projectname",
				"PROJECT_NAME"
			],
			[
				"Pro",
				"PROJECT_SOURCE_DIR"
			],
			[
				"include",
				"include_directories"
			],
			[
				"top",
				"\\top                                              \tlatex-mathsymbols"
			],
			[
				"water",
				"water_level"
			],
			[
				"im",
				"improved_perlin_noise"
			],
			[
				"per",
				"improved_perlin_noise"
			],
			[
				"moun",
				"mountain_level"
			],
			[
				"hsv",
				"hsv_to_rgb"
			],
			[
				"wat",
				"water_level"
			],
			[
				"wa",
				"water_level"
			],
			[
				"impro",
				"improved_bump_height"
			],
			[
				"inter",
				"interpolate_hsv"
			],
			[
				"sea",
				"season_color"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/main.cpp",
			"settings":
			{
				"buffer_size": 42004,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 122,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "WB: 4869\nRS: 2116",
			"settings":
			{
				"buffer_size": 17,
				"line_ending": "Windows",
				"name": "WB: 4869"
			}
		},
		{
			"file": "/C/Users/Kevin Weckworth/Documents/Elder Scrolls Online/live/UserSettings.txt",
			"settings":
			{
				"buffer_size": 6349,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shaders/shader.vert",
			"settings":
			{
				"buffer_size": 269,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shaders/shader.frag",
			"settings":
			{
				"buffer_size": 196,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 1410,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "build.ninja",
			"settings":
			{
				"buffer_size": 26458,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "ninja",
	"build_system_choices":
	[
		[
			[
				[
					"Build with ninja",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Build with ninja",
				""
			]
		],
		[
			[
				[
					"Ninja",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Ninja",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/NinjaBuild/ninja.sublime-build",
					""
				]
			],
			[
				"Packages/NinjaBuild/ninja.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					""
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Traditional"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Script Builder"
				]
			],
			[
				"Packages/LaTeXTools/LaTeX.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"ninja",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"ninja",
				""
			]
		],
		[
			[
				[
					"ninja",
					""
				],
				[
					"ninja",
					"Run"
				]
			],
			[
				"ninja",
				"Run"
			]
		],
		[
			[
				[
					"ninja",
					""
				],
				[
					"ninja",
					"run"
				]
			],
			[
				"ninja",
				"run"
			]
		],
		[
			[
				[
					"ninja",
					""
				],
				[
					"ninja",
					"run"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"ninja",
				"run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"indent",
				"Indentation: Reindent Lines"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"syntax c++",
				"Set Syntax: C++11"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"init",
				"Snippet: template <typename ${1:_InputIter}>"
			],
			[
				"lsp",
				"LSP: Enable Language Server Globally"
			],
			[
				"build",
				"Build With: ninja - run"
			],
			[
				"syntax json",
				"Set Syntax: JSON"
			],
			[
				"byu",
				"Build: New Build System"
			],
			[
				"glsl",
				"Set Syntax: GLSL"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"word",
				"LaTeXWordCount: Word Count"
			],
			[
				"clea",
				"LaTeXTools: Clear current bibliography cache"
			],
			[
				"latex",
				"LaTeXWordCount: Word Count"
			],
			[
				"biber",
				"LaTeXTools: Clear current bibliography cache"
			],
			[
				"buil",
				"Build With: LaTeX"
			],
			[
				"wor",
				"LaTeXWordCount: Word Count"
			],
			[
				"tradi",
				"Build With: LaTeX - Traditional"
			],
			[
				"",
				"Build With: LaTeX - Traditional"
			],
			[
				"clean",
				"LaTeXTools: Clear document cache"
			],
			[
				"dele",
				"LaTeXTools: Delete temporary files"
			],
			[
				"delete",
				"LaTeXTools: Delete temporary files"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 157.0,
		"history":
		[
			"which latexindent"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/dev/vulkan-playground",
		"/C/dev/vulkan-playground/shaders",
		"/C/dev/vulkan-playground/src"
	],
	"file_history":
	[
		"/C/dev/vulkan-playground/.git/COMMIT_EDITMSG",
		"/C/dev/vulkan-playground/compile-shaders.bat",
		"/C/dev/vulkan-playground/.gitignore",
		"/C/dev/vulkan-playground/build-Debug.ninja",
		"/C/dev/vulkan-playground/CMakeCache.txt",
		"/C/dev/vulkan-playground/.ninja_deps",
		"/C/dev/vulkan-playground/CMakeLists.txt",
		"/C/dev/vulkan-playground/build.ninja",
		"/C/dev/vulkan-playground/.ninja_log",
		"/C/dev/vulkan-playground/rules.ninja",
		"/C/dev/vulkan-playground/vulkan-playground.sublime-project",
		"/C/dev/vulkan-playground/src/main.cpp",
		"/C/dev/vulkan-playground/gitignore",
		"/C/dev/vulkan-playground/compile_commands.json",
		"/C/dev/vulkan-playground/make.bat",
		"/C/dev/vulkan-playground/run.bat",
		"/C/dev/vulkan-playground/build.bat",
		"/C/dev/vulkan-playground/glfw/CMakeLists.txt",
		"/C/dev/vulkan-playground/glfw/README.md",
		"/C/dev/csc317/computer-graphics-ray-tracing/CMakeLists.txt",
		"/C/dev/csc317/computer-graphics-meshes/CMakeLists.txt",
		"/C/dev/vulkan-playground/.sublime-project",
		"/C/dev/csc317/computer-graphics-meshes/src/per_corner_normals.cpp",
		"/C/dev/ninja/CMakeLists.txt",
		"/C/Games/Steam/steamapps/common/XCom-Enemy-Unknown/XEW/XComGame/Config/DefaultSightlines.ini",
		"/C/Games/Steam/steamapps/common/XCom-Enemy-Unknown/XEW/XComGame/Config/DefaultMutatorLoader.ini",
		"/C/Users/Kevin Weckworth/AppData/Local/Temp/7zOC20AE2C6/readme.txt",
		"/D/Google Drive/School/CSC317/Test 2/Test 2.tex",
		"/C/Games/Steam/steamapps/common/NGU INDUSTRIES/NGU INDUSTRIES_Data/Plugins/Steamworks.NET.txt",
		"/C/dev/csc317/computer-graphics-ray-tracing/main.cpp",
		"/C/dev/csc317/computer-graphics-kinematics/data/robot-arm.json",
		"/C/dev/ninja/build-cmake/CMakeCache.txt",
		"/C/dev/csc317/computer-graphics-meshes/src/per_vertex_normals.cpp",
		"/C/dev/csc317/computer-graphics-meshes/src/vertex_triangle_adjacency.cpp",
		"/C/dev/csc317/computer-graphics-meshes/src/triangle_area_normal.cpp",
		"/C/dev/csc317/computer-graphics-meshes/src/per_face_normals.cpp",
		"/D/Google Drive/School/CSC317/Test 2/sample_latex_file.tex",
		"/C/Users/Kevin Weckworth/AppData/Local/Temp/7zO881FA33E/readme.txt",
		"/C/Users/Kevin Weckworth/AppData/Local/Temp/raycolor.cpp",
		"/C/Users/Kevin Weckworth/AppData/Local/Temp/creative.json",
		"/C/dev/csc317/computer-graphics-shader-pipeline/src/procedural_color.fs",
		"/C/dev/csc317/computer-graphics-shader-pipeline/src/improved_perlin_noise.glsl",
		"/C/dev/csc317/computer-graphics-shader-pipeline/src/tangent.glsl",
		"/C/dev/csc317/computer-graphics-shader-pipeline/src/bump_position.glsl",
		"/C/dev/csc317/computer-graphics-shader-pipeline/src/bump_height.glsl",
		"/C/dev/csc317/computer-graphics-shader-pipeline/src/planet.fs",
		"/C/dev/csc317/computer-graphics-shader-pipeline/src/bump.fs",
		"/C/dev/csc317/computer-graphics-kinematics/data/chimpanzee-hand.dmat",
		"/C/dev/csc317/computer-graphics-kinematics/data/chimpanzee-hand.bf",
		"/C/dev/csc317/computer-graphics-kinematics/data/chimpanzee-hand.json",
		"/C/dev/csc317/computer-graphics-shader-pipeline/src/perlin_noise.glsl",
		"/C/dev/csc317/computer-graphics-shader-pipeline/data/test-07.json",
		"/C/dev/csc317/computer-graphics-shader-pipeline/src/improved_smooth_step.glsl",
		"/C/dev/csc317/computer-graphics-shader-pipeline/src/rotate_about_y.glsl",
		"/C/Users/Kevin Weckworth/Dropbox/clickerHeroSave.txt",
		"/C/Users/Kevin Weckworth/Dropbox/matterdimensions.txt",
		"/C/dev/csc317/computer-graphics-meshes/build/sphere.obj",
		"/C/Users/Kevin Weckworth/Documents/Elder Scrolls Online/live/Logs/Encounter.log",
		"/C/dev/csc317/computer-graphics-meshes/build/cube.obj",
		"/C/dev/csc317/computer-graphics-meshes/build/core.dir/Release/write_obj.obj",
		"/C/dev/csc317/computer-graphics-meshes/build/core.dir/Release/cube.obj",
		"/D/Google Drive/School/CSC317/computer-graphics-bounding-volume-hierarchy/data/rubber-ducky.obj",
		"/D/Google Drive/School/CSC317/computer-graphics-ray-tracing (1)/src/Triangle.cpp",
		"/D/Downloads/code.cpp",
		"/C/dev/csc317/computer-graphics-meshes/data/bob.obj",
		"/C/Users/Kevin Weckworth/Dropbox/prestige tree.txt",
		"/C/dev/csc317/computer-graphics-meshes/build/obj.dir/Release/obj.obj",
		"/C/dev/csc317/computer-graphics-meshes/build/obj.dir/Release/obj.log",
		"/C/Users/Kevin Weckworth/Documents/Elder Scrolls Online/live/Logs/Encounter-split-1969-12-31T23-59-59.998Z.log",
		"/D/Google Drive/School/CSC317/computer-graphics-bounding-volume-hierarchy/intersections.cpp",
		"/D/Google Drive/School/CSC317/computer-graphics-bounding-volume-hierarchy/include/MeshTriangle.h",
		"/C/Users/Kevin Weckworth/Dropbox/Realm Grinder Builds.txt",
		"/D/Google Drive/School/CSC317/computer-graphics-ray-tracing/data/mirror.json",
		"/D/Google Drive/School/CSC317/computer-graphics-ray-tracing/data/sphere.json",
		"/D/Google Drive/School/CSC317/computer-graphics-ray-tracing/src/generate_stars.py",
		"/D/Google Drive/School/CSC317/computer-graphics-ray-tracing/src/creative.json",
		"/D/Google Drive/School/CSC317/computer-graphics-ray-tracing/data/bunny.json",
		"/D/Google Drive/School/CSC317/computer-graphics-ray-tracing/data/sphere-small-change.json",
		"/D/Google Drive/School/CSC317/computer-graphics-ray-tracing/data/sphere-and-plane.json",
		"/D/Google Drive/School/CSC317/computer-graphics-ray-tracing/data/sphere-large-change.json",
		"/D/Google Drive/School/CSC317/computer-graphics-ray-tracing/data/triangle.json",
		"/D/Google Drive/School/CSC317/computer-graphics-ray-tracing/src/first_hit.cpp",
		"/D/Google Drive/School/CSC317/computer-graphics-ray-casting/data/triangle.json",
		"/D/Google Drive/School/CSC317/computer-graphics-ray-casting/data/sphere-and-plane.json",
		"/D/Google Drive/dev/aoc2020/src/18/input.txt",
		"/D/Google Drive/dev/aoc2020/src/18/18.hs",
		"/D/Google Drive/School/CSC317/computer-graphics-ray-casting/data/inside-a-sphere.json",
		"/D/Google Drive/School/CSC317/computer-graphics-raster-images/src/write_ppm.cpp",
		"/D/Google Drive/School/CSC317/computer-graphics-raster-images/build/reflected.ppm",
		"/D/Google Drive/School/CSC317/computer-graphics-raster-images/build/rgb.ppm",
		"/D/Google Drive/School/CSC317/computer-graphics-raster-images/CMakeLists.txt",
		"/D/Google Drive/School/CDN267/cumulative project/cumulative.tex",
		"/C/Users/Kevin Weckworth/Dropbox/fe60 save.txt",
		"/C/Users/Kevin Weckworth/Dropbox/AD NG+++ Save.txt",
		"/C/Users/Kevin Weckworth/AppData/Local/ModOrganizer/Fallout 4/mods/Buffout 4/F4SE/Plugins/Buffout4.toml",
		"/C/Users/Kevin Weckworth/Documents/My Games/FalloutNV/Fallout.ini",
		"/C/Users/Kevin Weckworth/Documents/My Games/FalloutNV/FalloutPrefs.ini",
		"/C/Users/Kevin Weckworth/Documents/My Games/FalloutNV/FalloutCustom.ini",
		"/D/Google Drive/School/CSC317/computer-graphics-raster-images/build/CMakeCache.txt",
		"/C/Users/Kevin Weckworth/Dropbox/realm grinder save.txt",
		"/C/Users/Kevin Weckworth/AppData/Local/Temp/7zO4D388A55/Readme TTW 3.2.1.txt",
		"/C/Games/Steam/steamapps/common/Fallout New Vegas/ttw/files/nvse/nvse_config.ini",
		"/C/Games/Steam/steamapps/common/Fallout New Vegas/ttw/files/YUP credits.txt",
		"/C/Games/Steam/steamapps/common/Fallout New Vegas/ttw/files/nvse/plugins/jip_nvse.ini",
		"/C/Games/Steam/steamapps/common/Fallout New Vegas/ttw/files/YUPTTW.txt",
		"/D/Google Drive/dev/aoc2020/src/17/17.hs",
		"/D/Google Drive/dev/aoc2020/src/17/input.txt",
		"/D/Google Drive/dev/aoc2020/src/16/input.txt",
		"/D/Google Drive/dev/aoc2020/src/16/16.hs",
		"/D/Google Drive/School/CDN267/cumulative project/reflection.tex",
		"/D/Google Drive/dev/aoc2020/src/15/input.txt",
		"/D/Google Drive/dev/aoc2020/src/15/15.hs",
		"/D/Google Drive/dev/aoc2020/src/14/14.hs",
		"/D/Google Drive/dev/aoc2020/src/14/input.txt",
		"/D/Google Drive/dev/aoc2020/src/13/input.txt",
		"/D/Google Drive/dev/aoc2020/src/13/13.hs",
		"/D/Google Drive/School/SMC228/term test/term test.tex",
		"/D/Google Drive/dev/aoc2020/src/12/12.hs",
		"/C/Games/Cyberpunk 2077/patch_log.txt",
		"/C/Games/Cyberpunk 2077/patch/VERY IMPORTANT INSTRUCTIONS!!!!!!.txt",
		"/D/Google Drive/dev/aoc2020/src/12/input.txt",
		"/D/Google Drive/dev/aoc2020/stack.yaml",
		"/D/Google Drive/dev/aoc2020/src/4/input.txt",
		"/D/Google Drive/dev/aoc2020/src/4/4.hs",
		"/D/Google Drive/dev/aoc2020/src/3/3.hs",
		"/D/Google Drive/dev/aoc2020/src/4/4test.hs",
		"/D/Google Drive/dev/aoc2020/src/2/2.hs",
		"/D/Google Drive/dev/aoc2020/src/3/input.txt"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"createindexbuffer",
			"vertices",
			"createvertexbuffer",
			"cleanup",
			"vertexbuffermemory",
			"vkdevicememory",
			"createcommandbuffers",
			"allocinfo",
			"vertexbuffer",
			"recreateswapchain",
			"framebufferresizedcallback",
			"init",
			"framebufferResizedCallback",
			"static",
			"suboptimal",
			"currentframe",
			"imagesinflight",
			"inflightfences",
			"createSemaphores",
			"commandbuffers",
			"createrenderpass",
			"creategraphicspipeline",
			"shader",
			"init",
			"createswap",
			"swapchain",
			"init",
			"isdevicesuitable",
			"adequate",
			"isdevice",
			"validationlayers",
			"indices",
			"cleanup",
			"physicaldevice",
			"glfw",
			"setupDebugMessenger",
			"createInstance",
			"GLFW_LIBRARIES",
			"gnu",
			"gcc",
			"\"bone_id\":",
			"bone_id\":1,",
			"12528",
			"360",
			"-360",
			"asylum sanctorium",
			"asylum",
			"2266",
			"ray_intersect",
			"to",
			"pos",
			"reqkeys",
			"hasreqkeys",
			"255002731",
			"max energy",
			"energy",
			"storage",
			"mfe",
			"urllib",
			"decode",
			"fp = self.open(url",
			"escape",
			"tempname",
			"download.py",
			"levelUpCost",
			"getMonsterExperience",
			"level",
			"getDifficulty",
			"experience",
			"normalize",
			"fromfloat",
			"bignumber"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"createSyncObjects",
			"waypoint"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42004,
						"regions":
						{
						},
						"selection":
						[
							[
								38098,
								38098
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": "\\",
									"selector": "text.tex.latex"
								},
								{
									"characters": ".<>:\"/",
									"selector": "source.c++"
								}
							],
							"lsp_active": true,
							"lsp_language":
							{
								"clangd": "cpp"
							},
							"show_definitions": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2
						},
						"translation.x": 0.0,
						"translation.y": 20928.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 122,
						"regions":
						{
						},
						"selection":
						[
							[
								67,
								67
							]
						],
						"settings":
						{
							"syntax": "Packages/Git Formats/Git Ignore.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17,
						"regions":
						{
						},
						"selection":
						[
							[
								17,
								17
							]
						],
						"settings":
						{
							"auto_name": "WB: 4869",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Users/Kevin Weckworth/Documents/Elder Scrolls Online/live/UserSettings.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6349,
						"regions":
						{
						},
						"selection":
						[
							[
								5345,
								5345
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2795.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "shaders/shader.vert",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 269,
						"regions":
						{
						},
						"selection":
						[
							[
								266,
								266
							]
						],
						"settings":
						{
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "shaders/shader.frag",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 196,
						"regions":
						{
						},
						"selection":
						[
							[
								64,
								64
							]
						],
						"settings":
						{
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1410,
						"regions":
						{
						},
						"selection":
						[
							[
								479,
								479
							]
						],
						"settings":
						{
							"syntax": "Packages/CMakeEditor/CMakeEditor.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "build.ninja",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26458,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Ninja/ninja.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 972.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.diagnostics":
	{
		"height": 126.0
	},
	"output.exec":
	{
		"height": 158.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.latextools":
	{
		"height": 126.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "vulkan-playground.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 207.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
